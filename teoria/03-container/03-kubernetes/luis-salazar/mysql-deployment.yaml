# Each yaml section defines type of object defined in kubernets

# This defines a service. The service is the way we expose our
# app within or outside the cluster
apiVersion: v1
# Field for define the object
kind: Service
# Field for describing the metada, in this case the name of the object
metadata:
  name: wordpress-mysql
# Field for specifying the state goal of the object, so that the cluster
# takes necessary actions to reach the state
spec:
# The selector field defines which kind of pods we are going to use
  selector:
# In this service we are requesting pods whose labels contain app: wordpress and tier: mysql
    app: wordpress
    tier: mysql

  ports:
# Define the port to access the service
    - port: 3306

---
apiVersion: v1
# Define an object type PersistentVolumeClaim, for requesting storage
kind: PersistentVolumeClaim
metadata:
# Define name of object
  name: mysql-pv-claim
# Field for specifying the state goal of the object, so that the cluster do
# whatever it can to reach the state
spec:
  accessModes:
# All the pods of a single node can read and write on the volume
    - ReadWriteOnce
  resources:
    requests:
# Size of the requested storage
      storage: 1Gi
---
apiVersion: apps/v1
# Define an object type Deployment, ensuring a certain number of pods
# running an app designed to manage stateless applications
kind: Deployment
metadata:
  name: wordpress-mysql
spec:
# The selector field defines which kind of pods we are going to work with, in this case
# pods with a label saying app: wordpress and tier:mysql
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
# In case the desired number of pods is not met, the Deployment can create new pods
# and uses the template to specify which attributes the pods will have
#In this case, the template create pods for wordpress app.
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
# As the name says, the field defines aspects of the containers like the image
# in this case it uses the maria database image
      containers:
      - image: mariadb:10.6
        name: mysql
# Environment variables
        env:
        - name: MYSQL_DATABASE
          value: wordpress
        - name: MYSQL_USER
          valueFrom:
# Reading the stored information in the secret previously defined
            secretKeyRef:
              name: mysql-pass
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
# Defining the mapping ports 3306
        ports:
        - containerPort: 3306
          name: mysql
# Defining the mounting directories for the volumes
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
# Using the persistent volume claim previously defined
          claimName: mysql-pv-claim